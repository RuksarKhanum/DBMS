/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecommerce;

import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Raheela Khanum
 */
public class Groceries extends javax.swing.JInternalFrame {

    /**
     * Creates new form Groceries
     */
    
    Connection con;
    PreparedStatement ps; 
    ResultSet rs;
    boolean Signin;
    String role;
    String Name;
    String Category="Grocery";
    int CID=5;
    String ID;
    
    
    public Groceries(String name,boolean Signin) {
        initComponents();
         Connect();
      this.Name=name;
      this.Signin=Signin;
      JTable();
    }
   
    
    public Groceries(String id,String name,boolean Signin)
    {
      initComponents(); 
      Connect();
      //JTable.setBackground(new Color(231, 76, 60, 50));
      this.Name=name;
      this.Signin=Signin;
      this.ID=id;
      JTable();
      
          
    }
    
    
    public void Connect()
      {
          try{
              Class.forName("com.mysql.cj.jdbc.Driver");
              con = DriverManager.getConnection("jdbc:mysql://localhost/ecommerce","root","Ruk@413255");
              }
          catch(ClassNotFoundException ex)
              {Logger.getLogger(userlog.class.getName()).log(Level.SEVERE, null, ex);
               }
          catch (SQLException ex) {
            Logger.getLogger(userlog.class.getName()).log(Level.SEVERE, null, ex);
             }
      }

    public void JTable()
    {
         JTable.getColumnModel().getColumn(0).setPreferredWidth(0);
         JTable.getColumnModel().getColumn(1).setPreferredWidth(300);
         JTable.getColumnModel().getColumn(2).setPreferredWidth(1000);
         JTable.getColumnModel().getColumn(3).setPreferredWidth(200);
         JTable.getColumnModel().getColumn(4).setPreferredWidth(0);
         //Color background=new Color(0,0,0,0);
        try
        {                      
           ps=con.prepareStatement("select * from products where category=?");
           ps.setString(1,Category);
           rs=ps.executeQuery();
           
           ResultSetMetaData Rsm=rs.getMetaData();
           int c;
           c=Rsm.getColumnCount();
           
           DefaultTableModel d1=(DefaultTableModel)JTable.getModel();
           d1.setRowCount(0);
           
           while(rs.next())
           {
              
               Vector v2=new Vector();
               for(int i=1;i<=c;i++)
               {
                   v2.add(rs.getString("p_id"));
                   v2.add(rs.getString("p_name"));
                   v2.add(rs.getString("description"));
                   v2.add(rs.getInt("price"));
                   v2.add(rs.getString("pathname"));
               }
               d1.addRow(v2);
               
           }
        } catch (SQLException ex) {
            Logger.getLogger(MobilesAndAccessories.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }   

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setNormalBounds(new java.awt.Rectangle(0, 0, 1550, 780));
        setPreferredSize(new java.awt.Dimension(1550, 780));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon("G:\\Ruksar 5thsem\\Project\\Icons&Images\\MainGrocery.jpeg")); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setPreferredSize(new java.awt.Dimension(1550, 300));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1540, 300);

        JTable.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PID", "Product", "Description", "Price", "Pathname"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JTable.setOpaque(false);
        JTable.setRowHeight(60);
        JTable.setSelectionBackground(new java.awt.Color(204, 204, 255));
        JTable.setSelectionForeground(new java.awt.Color(0, 102, 255));
        JTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JTable.setShowHorizontalLines(false);
        JTable.setShowVerticalLines(false);
        JTable.getTableHeader().setReorderingAllowed(false);
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JTable);
        JTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (JTable.getColumnModel().getColumnCount() > 0) {
            JTable.getColumnModel().getColumn(0).setResizable(false);
            JTable.getColumnModel().getColumn(1).setResizable(false);
            JTable.getColumnModel().getColumn(2).setResizable(false);
            JTable.getColumnModel().getColumn(3).setResizable(false);
            JTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 300, 1540, 450);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1526, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    addMA row_data=new addMA(Name,Signin,CID,Category);
     SelectedRow data=new SelectedRow(Name,Signin,CID,Category);
     
     
    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        // TODO add your handling code here:
          if(Name.equals("Ruksar") || Name.equals("Ruzaina"))
      {
            int index=JTable.getSelectedRow();
            TableModel model=JTable.getModel();
            String PID=model.getValueAt(index,0).toString();
            String ProductName=model.getValueAt(index,1).toString();
            String Description=model.getValueAt(index,2).toString();
            String Price=model.getValueAt(index,3).toString();
            filename=model.getValueAt(index,4).toString();
            
            this.setVisible(false);
            row_data.setVisible(true);
            row_data.pack();
            row_data.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            row_data.AddProductButton.setEnabled(false);
            row_data.jLabel7.setText(Name);
            row_data.jLabel5.setText(ID);
            row_data.jLabel6.setText(PID);
            row_data.pname.setText(ProductName);
            row_data.desc.setText(Description);
            row_data.cost.setText(Price);
            ImageIcon imageicon=new ImageIcon(model.getValueAt(index,4).toString());
              //Resize image to fit jLabel
            Image imageFit = imageicon.getImage().getScaledInstance(row_data.pic.getWidth(),row_data.pic.getHeight(),Image.SCALE_SMOOTH);
            row_data.pic.setIcon(new ImageIcon(imageFit));
            row_data.pic.setText("");
            row_data.path.setText(filename);
      }
       
     else
      {
          int index=JTable.getSelectedRow();
            TableModel model=JTable.getModel();
            String PID=model.getValueAt(index,0).toString();
            String ProductName=model.getValueAt(index,1).toString();
            String Description=model.getValueAt(index,2).toString();
            String Price=model.getValueAt(index,3).toString();
            
            
            data.setVisible(true);
            data.pack();
            data.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            data.jLabel6.setText(ID);
            data.jLabel7.setText(PID);
            data.jLabel8.setText(Price);
            data.pname.setText(ProductName);
            data.desc.setText(Description);
            data.cost.setText(Price);
            ImageIcon imageicon=new ImageIcon(model.getValueAt(index,4).toString());
              //Resize image to fit jLabel
            Image imageFit = imageicon.getImage().getScaledInstance(data.pic.getWidth(),data.pic.getHeight(),Image.SCALE_SMOOTH);
            data.pic.setIcon(new ImageIcon(imageFit));
            
      }
    }//GEN-LAST:event_JTableMouseClicked

     
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    byte[] photo=null;
String filename=null;
}
